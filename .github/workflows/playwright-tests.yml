name: Playwright Tests Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

 
    - name: Install dependencies
      run: npm install

    # Run ESLint
    - name: Run ESLint
      run: npm run lint

    # Install Playwright browsers
    - name: Install Playwright Browsers
      run: npx playwright install

    # Start Backend Server using Docker
    - name: Start Backend Server
      run: |
        docker run -d -p 9966:9966 springcommunity/spring-petclinic-rest
        sleep 10  # Wait for the backend to be fully initialized

    # Start Frontend Server using Docker
    - name: Start Frontend Server
      run: |
        docker run --rm -d -p 8080:8080 spring-petclinic-angular:latest
        sleep 10  # Wait for the frontend to be fully initialized

    # Wait for Frontend to be available on localhost:8080
    - name: Wait for Frontend
      run: |
        timeout 60s bash -c 'until echo > /dev/ttcp/localhost/8080; do sleep 1; done'

    # Run Playwright tests (ensure baseURL points to localhost:8080)
    - name: Run Playwright Tests
      run: npx playwright test

    # Install Allure Commandline globally
    - name: Install Allure Commandline globally
      run: npm install -g allure-commandline

    # Generate Allure report
    - name: Generate Allure Report
      run: |
        allure generate ./allure-results -o ./allure-report --clean

    # Upload Allure report as an artifact
    - name: Upload Allure Report
      if: always()  
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: ./allure-report
